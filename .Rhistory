#ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
output %>%
ggplot(aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
#ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "steelblue", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
output %>%
ggplot(aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
#ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "indianred3", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
output %>%
ggplot(aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
#ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
output %>%
#ggplot(aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left") +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH.beta", ticks = FALSE, label = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left") +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
scale_fill_discrete(labels = c("Female enriched", "Male enriched")) +
guides(fill = guide_colorbar(title = "MASH.beta", ticks = FALSE, label = FALSE))
source('~/Desktop/Huang Lab/sex difference-lncRNA/R code/GTEx LncRNA Sex Difference/scripts/20210730.R', echo=TRUE)
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left") +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
scale_fill_discrete(limits = c(20:40,0:20), labels = c("Female enriched", "Male enriched")) +
guides(fill = guide_colorbar(title = "MASH.beta", ticks = FALSE, label = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left") +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH.beta", ticks = FALSE, label = FALSE))
beta<-
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left") +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH.beta", ticks = FALSE, label = FALSE))
LFSR<-
#ggplot(data=output, aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
beta +LFSR
View(beta)
output <-
output %>%
mutate(LFSR_new = if_else(MASH.LFSR <= 10^(-40), -log10(10^(-40)), -log10(MASH.LFSR)))
LFSR<-
#ggplot(data=output, aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
beta +LFSR
#ggplot(data=output, aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), axis.title.y = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), axis.text.y = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
#ggplot(data=output, aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
beta +LFSR
LFSR<-
#ggplot(data=output, aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10(MASH.LFSR)", ticks = FALSE))
beta +LFSR
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left") +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10\n(MASH.LFSR)", ticks = FALSE))
beta<-
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left") +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
output <-
output %>%
mutate(LFSR_new = if_else(MASH.LFSR <= 10^(-40), -log10(10^(-40)), -log10(MASH.LFSR)))
LFSR<-
#ggplot(data=output, aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10\n(MASH.LFSR)", ticks = FALSE))
beta +LFSR
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left", legend.key.size = unit(1,"cm")) +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left", legend.key.size = unit(0.5,"cm")) +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left",
legend.key.size = unit(0.5,"cm"), legend.title = element_text(size = 5)) +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left",
#legend.key.size = unit(0.5,"cm"),
legend.title = element_text(size = 8)) +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left",
#legend.key.size = unit(0.5,"cm"),
legend.title = element_text(size = 10)) +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
#Plot heatmap using significance/effect size of each lncRNA
beta<-
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +
#ggplot(data = output, aes(x=.id, y=ENSEMBL_gene_id, fill=MASH.beta)) +   #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), legend.position = "left",
legend.title = element_text(size = 9)) +
scale_fill_gradient2(midpoint=0, low="#B2182B", high="#2166AC") +
guides(fill = guide_colorbar(title = "MASH \n beta", ticks = FALSE, label = FALSE))
output <-
output %>%
mutate(LFSR_new = if_else(MASH.LFSR <= 10^(-40), -log10(10^(-40)), -log10(MASH.LFSR)))
LFSR<-
#ggplot(data=output, aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) +
ggplot(data = output[output$ENSEMBL_gene_id != "ENSG00000229807",], aes(x=.id, y=ENSEMBL_gene_id, fill=LFSR_new)) + #exclude XIST
geom_tile() +
theme_bw() +
theme_tufte()+
scale_fill_gradient(high = "darkseagreen4", low = "white")+
theme(axis.text.x = element_text(angle = 90), aspect.ratio = 1.05/1, axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), legend.title = element_text(size = 9)) +
#scale_fill_gradient2() +
guides(fill = guide_colorbar(title = "-log10\n(MASH.LFSR)", ticks = FALSE))
beta +LFSR
library(readxl)
sheets <- excel_sheets("data/top 500 diff ex genes in each tissue by science.xlsx")
x<- lapply(sheets,function(X) read_excel(filename, sheet = X))
sheets <- excel_sheets("data/top 500 diff ex genes in each tissue by science.xlsx")
x<- lapply(sheets,function(X) read_excel("data/top 500 diff ex genes in each tissue by science.xlsx", sheet = X))
View(x)
names(x) <- sheets
View(x)
View(x)
unlist(x)
View(x)
View(x)
View(x)
x[["ARTTBL"]]
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
read_excel_allsheets <- function(filename) {
sheets <- excel_sheets(filename)
x<- lapply(sheets,function(X) read_excel(filename, sheet = X))
names(x) <- sheets
}
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
#Delete README and Replication in mysheets
mysheets <- mysheets[-c(1,2)]
library(biomaRt)
ensembl = useEnsembl(biomart="ensembl", dataset="hsapiens_gene_ensembl")
genemap <- getBM(attributes= c("ensembl_gene_id", "gene_biotype", "chromosome_name","external_gene_name",
"ensembl_gene_id_version"), mart=ensembl)
#extract microRNA in genemap
genemap_micro <- genemap[genemap$gene_biotype == "microRNA"]
unique(genemap$gene_biotype)
#extract microRNA in genemap
genemap_micro <- genemap[genemap$gene_biotype == "miRNA"]
#extract microRNA in genemap
genemap_micro <- genemap[genemap$gene_biotype == "miRNA",]
View(genemap_micro)
save(genemap_micro, file = "genemap_micro.RData")
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
read_excel_allsheets <- function(filename) {
sheets <- excel_sheets(filename)
x<- lapply(sheets,function(X) read_excel(filename, sheet = X))
names(x) <- sheets
x
}
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
View(mysheets)
#Delete README and Replication in mysheets
mysheets <- mysheets[-c(1,2)]
mysheets[["Replication"]]
mysheets[["ADRNLG"]]
library(dplyr)
?mutate
mysheets <- lapply(mysheets, function(X){
X<-
X %>% mutate_(
ENSEMBL_gene_id = gsub("\\..*","".ENSEMBL_gene_id)
)
})
mysheets <- lapply(mysheets, function(X){
X<-
X %>% mutate_(ENSEMBL_gene_id = gsub("\\..*","",ENSEMBL_gene_id))
})
mysheets <- lapply(mysheets, function(X){
X<-
X %>% dplyr::mutate(ENSEMBL_gene_id = gsub("\\..*","",ENSEMBL_gene_id))
})
View(mysheets)
mysheets[["ARTTBL"]]
mysheets <- sapply(mysheets, function(X){
X<-
X %>% dplyr::mutate(ENSEMBL_gene_id = gsub("\\..*","",ENSEMBL_gene_id))
})
View(mysheets)
View(mysheets)
View(mysheets)
mysheets[[14]]
mysheets <- lapply(mysheets, function(X){
X<-
X %>% dplyr::mutate(ENSEMBL_gene_id = gsub("\\..*","",ENSEMBL_gene_id))
})
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
#Delete README and Replication in mysheets
mysheets <- mysheets[-c(1,2)]
mysheets <- unlist(lapply(mysheets, function(X){
X<-
X %>% dplyr::mutate(ENSEMBL_gene_id = gsub("\\..*","",ENSEMBL_gene_id))
}))
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
#Delete README and Replication in mysheets
mysheets <- mysheets[-c(1,2)]
#Extract microRNA from top 500 genes in each tissue
mysheets <- lapply(mysheets, function(X){
X<-
X %>% dplyr::mutate(ENSEMBL_gene_id = gsub("\\..*","",ENSEMBL_gene_id))
})
#load all the microRNAs
load("data/genemap_micro.RData")
mysheets2 <- lapply(mysheets, function(X) {
merge(X, genemap_micro, by.x = "ENSEMBL_gene_id", by.y = "ensembl_gene_id", all =FALSE)
}
)
View(mysheets2)
View(mysheets2)
View(mysheets)
mysheets[["BRNCHB"]]
View(genemap_micro)
mysheets2 <- lapply(mysheets, function(X) {
X <- merge(X, genemap_micro, by.x = "ENSEMBL_gene_id", by.y = "ensembl_gene_id", all =FALSE)
}
)
View(mysheets2)
View(mysheets2)
mysheets2 <- lapply(mysheets, function(X) {
base::merge(X, genemap_micro, by.x = "ENSEMBL_gene_id", by.y = "ensembl_gene_id", all =FALSE)
}
)
View(mysheets2)
View(mysheets2)
View(mysheets2)
read_excel_allsheets <- function(filename) {
sheets <- excel_sheets(filename)
x<- lapply(sheets,function(X) read_excel(filename, sheet = X))
names(x) <- sheets
if(!tibble)x <- lapply(x,as.data.frame)
x
}
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
View(mysheets)
str(genemap)
View(mysheets)
read_excel_allsheets <- function(filename) {
sheets <- excel_sheets(filename)
x<- lapply(sheets,function(X) read_excel(filename, sheet = X))
names(x) <- sheets
if(!tibble) x <- lapply(x, as.data.frame)
x
}
mysheets
read_excel_allsheets <- function(filename) {
sheets <- excel_sheets(filename)
x<- lapply(sheets,function(X) read_excel(filename, sheet = X))
names(x) <- sheets
if(!tibble) x <- lapply(x, as.data.frame)
x
}
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
read_excel_allsheets <- function(filename, tibble = FALSE) {
sheets <- excel_sheets(filename)
x<- lapply(sheets,function(X) read_excel(filename, sheet = X))
names(x) <- sheets
if(!tibble) x <- lapply(x, as.data.frame)
x
}
mysheets <- read_excel_allsheets("data/top 500 diff ex genes in each tissue by science.xlsx")
View(mysheets)
View(mysheets)
View(mysheets)
#Delete README and Replication in mysheets
mysheets <- mysheets[-c(1,2)]
mysheets <- lapply(mysheets, function(X){
X<-
X %>% dplyr::mutate(ENSEMBL_gene_id = gsub("\\..*","",ENSEMBL_gene_id))
})
load("data/genemap_micro.RData")
mysheets2 <- lapply(mysheets, function(X) {
base::merge(X, genemap_micro, by.x = "ENSEMBL_gene_id", by.y = "ensembl_gene_id", all =FALSE)
}
)
View(mysheets2)
View(mysheets2)
View(mysheets2)
View(mysheets)
View(mysheets2)
mysheets2 <- lapply(mysheets, function(X) {
merge(X, genemap_micro, by.x = "ENSEMBL_gene_id", by.y = "ensembl_gene_id", all =FALSE)
}
)
View(mysheets2)
mysheets[["BRNACC"]]
mysheets2 <- lapply(mysheets, function(X) {
X <- merge(X, genemap_micro, by.x = "ENSEMBL_gene_id", by.y = "ensembl_gene_id", all =FALSE)
}
)
View(mysheets2)
View(mysheets2)
mysheets2[["ADRNLG"]]
##load all the lncs
load("data/genemap_lnc.RData")
mysheets1 <- lapply(mysheets, function(X) {
X <- merge(X, genemap_lnc, by.x = "ENSEMBL_gene_id", by.y = "ensembl_gene_id", all = FALSE)
}
)
View(mysheets1)
View(genemap_lnc)
View(genemap_micro)
genemap_micro$ensembl_gene_id %in% mysheets[[1]]$ENSEMBL_gene_id
sum(genemap_micro$ensembl_gene_id %in% mysheets[[1]]$ENSEMBL_gene_id)
#----------------------------------------------extract genes by protein coding and non-protein coding------------------------------------------
#METHOD 1: Download GTEx_Liver_counts from Huang lab drive uploaded by Yingbo (package: biomaRt) [a total of 13704 lncRNAs were defined]
GTEx_Liver_counts <- as.data.frame(read_delim('data/GTEx_Liver_counts'))
colnames(GTEx_Liver_counts)[1] <- "Ensembl_ID"
GTEx_Liver_counts$Ensembl_ID <- gsub("\\..*","",GTEx_Liver_counts$Ensembl_ID)
# For all the genes screened in the GTEx, add gene_biotype from the corresponding genemap, extract lncRNA
GTEx_Liver_counts <- merge(GTEx_Liver_counts, genemap, by.x = "Ensembl_ID", by.y="ensembl_gene_id", all = FALSE)
View(genemap_lnc)
View(GTEx_Liver_counts)
a <- GTEx_Liver_counts(nrow = 1000)
a <- GTEx_Liver_counts[nrow = 1000]
a <- GTEx_Liver_counts[1:1000,]
View(a)
b <- GTEx_Liver_counts[GTEx_Liver_counts$gene_biotype == "protein-coding",]
View(a)
b <- GTEx_Liver_counts[GTEx_Liver_counts$gene_biotype == "protein_coding",]
library(tidyverse)
GTEx_Liver_counts %>%
group_by(gene_biotype) %>%
dplyr::summerize(number = n())
GTEx_Liver_counts %>%
group_by(gene_biotype) %>%
tidyverse::summerize(number = n())
GTEx_Liver_counts %>%
group_by(gene_biotype) %>%
dplyr::summerise(number = n())
GTEx_Liver_counts %>%
group_by(gene_biotype) %>%
dplyr::summarise(number = n())
View(mysheets1)
sum(genemap_micro$ensembl_gene_id %in% mysheets[[“LIVER”]]$ENSEMBL_gene_id)
sum(genemap_micro$ensembl_gene_id %in% mysheets[['LIVER']]$ENSEMBL_gene_id)
c<-GTEx_Liver_counts %>%
group_by(gene_biotype) %>%
dplyr::summarise(number = n())
View(c)
f<- sapply(mysheets1, function(X) {
X$ENSEMBL_gene_id})
View(f)
f<- as.data.frame(unlist(sapply(mysheets1, function(X) {
X$ENSEMBL_gene_id})))
View(f)
